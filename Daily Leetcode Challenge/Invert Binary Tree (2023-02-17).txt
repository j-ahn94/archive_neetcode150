# 226. / INVERT BINARY TREE

QUESTION
------------------------------------------------------------------------------------------------------------------------------------------
Given the root of a binary tree, invert the tree, and return its root.


Example 1
------------------------------------------------------------------------------------------------------------------------------------------
Input: root = [4,2,7,1,3,6,9]
Output: [4,7,2,9,6,3,1]


Example 2
------------------------------------------------------------------------------------------------------------------------------------------
Input: root = [2,1,3]
Output: [2,3,1]

Example 3
------------------------------------------------------------------------------------------------------------------------------------------
Input: root = []
Output: []


JASON'S ANALYSIS

invertTree(root.left) = invertTree(root.right)
invertTree(root.right) = invertTree(root.left)


ALGORITHM

NeetCode (https://www.youtube.com/watch?v=OnSn2XEQ4MY)

Depth-First Search (both pre-order & post-order works)

1. Visit each node
2. Look at each node's children and swap the positions
3. In children tree, run recursive invert of both left and right


CODE
------------------------------------------------------------------------------------------------------------------------------------------

JAVA

PYTHON

class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        if not root:
            return None

        # swap the children
        tmp = root.left
        root.left = root.right
        root.right = tmp

        self.invertTree(root.left)
        self.invertTree(root.right)

        return root