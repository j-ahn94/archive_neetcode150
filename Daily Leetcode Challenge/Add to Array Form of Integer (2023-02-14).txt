# 989. / ADD TO ARRAY-FORM OF INTEGER

QUESTION
------------------------------------------------------------------------------------------------------------------------------------------
The array-form of an integer num is an array representing its digits in left to right order.

For example, for num = 1321, the array form is [1,3,2,1].
Given num, the array-form of an integer, and an integer k, return the array-form of the integer num + k.


Example 1
------------------------------------------------------------------------------------------------------------------------------------------
Input: num = [1,2,0,0], k = 34
Output: [1,2,3,4]
Explanation: 1200 + 34 = 1234


Example 2
------------------------------------------------------------------------------------------------------------------------------------------
Input: num = [2,7,4], k = 181
Output: [4,5,5]
Explanation: 274 + 181 = 455


Example 2
------------------------------------------------------------------------------------------------------------------------------------------
Input: num = [2,1,5], k = 806
Output: [1,0,2,1]
Explanation: 215 + 806 = 1021


JASON'S ANALYSIS

array -> int + k -> array

Time: O(n)
Space: O(1)

class Solution {
    public List<Integer> addToArrayForm(int[] num, int k) {
        int res = 0;
        for(int i = 0; i < num.length; i++) {
            res += Integer.valueOf(num[i]);
        }
        res += k;
        return res.toCharArray();
    }
}


ALGORITHM

NeetCode (https://www.youtube.com/watch?v=eBTZQt1TWfk)

Use of 'in place method' for the most efficient way to solve the problem.

Conduct 'mod operation' in K value (ie. 34 % 10 will give out 4. Add 4 to the array value).
It is important to reverse the array and add the values by it.

Time: O(# of digits in K) 

CODE
------------------------------------------------------------------------------------------------------------------------------------------

JAVA

class Solution {
    public List<Integer> addToArrayForm(int[] num, int k) {
        ArrayList<Integer> list = new ArrayList<>();
        int n = num.length;
        int carry = 0;

        for(int i = n - 1; i >= 0; i--) {
            num[i] = num[i] + k % 10 + carry;
            list.add(num[i] % 10); 
            carry = num[i] / 10;
            k = k / 10;
        }
        
        k += carry;
        while(k != 0) {
            list.add(k % 10);
            k /= 10;
        }
        Collections.reverse(list);
        return list;
    }
}


PYTHON