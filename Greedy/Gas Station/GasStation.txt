# 134. / MEDIUM

QUESTION
------------------------------------------------------------------------------------------------------------------------------------------
There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. 
You begin the journey with an empty tank at one of the gas stations.

Given two integer arrays gas and cost, return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1. 
If there exists a solution, it is guaranteed to be unique


Example 1
------------------------------------------------------------------------------------------------------------------------------------------
Input: gas = [1,2,3,4,5], cost = [3,4,5,1,2]
Output: 3
Explanation:
Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4
Travel to station 4. Your tank = 4 - 1 + 5 = 8
Travel to station 0. Your tank = 8 - 2 + 1 = 7
Travel to station 1. Your tank = 7 - 3 + 2 = 6
Travel to station 2. Your tank = 6 - 4 + 3 = 5
Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.
Therefore, return 3 as the starting index.


Example 2
------------------------------------------------------------------------------------------------------------------------------------------
Input: gas = [2,3,4], cost = [3,4,3]
Output: -1
Explanation:
You can't start at station 0 or 1, as there is not enough gas to travel to the next station.
Let's start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4
Travel to station 0. Your tank = 4 - 3 + 2 = 3
Travel to station 1. Your tank = 3 - 3 + 3 = 3
You cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.
Therefore, you can't travel around the circuit once no matter where you start.



JASON'S ANALYSIS

Initial thought was to create 'tree' and calculate every single possible calculation from the two given arrays.
Couldn't think of possible solution..


ALGORITHM

NeetCode (https://www.youtube.com/watch?v=lJwbPZGo05A)

Greedy question that is difficult to understand since it's unique.

It is important to understand that gas and cost array is connected to each other (ie. gas[i] will have cost[i] to travel forward).
NeetCode calculates each of the arrays by subtracting gas[i] - cost[i] and see whether positive integer arrives.
If difference between the two values arrive in negative, then it is impossible to move forward to the next gas station, so it needs to be skipped until positive values arrive.
Something to note is that all the values added in the gas array needs to be greater than the values added in cost since gas is considered '+' and cost is considered '-'.
Therefore, if the value between gas and cost is less than 0, then the result value (which we will return to indicate which array it needs to start) will be added 1 (to keep the index position).


CODE
------------------------------------------------------------------------------------------------------------------------------------------

JAVA

class Solution {
    public int canCompleteCircuit(int[] gas, int[] cost) {
        int sGas = 0, sCost = 0, total = 0, res = 0;
        for(int i = 0; i < gas.length; i++) {
            sGas += gas[i];
            sCost += cost[i];
        }
        if(sGas < sCost) return -1;
        for(int i = 0; i < gas.length; i++) {
            total = gas[i] - cost[i];
            if(total < 0) {
                total = 0;
                res = i + 1;
            }
        }
        return res;
    }
}
PYTHON